name: CI Tests

permissions:
  contents: read

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'
      - go.mod
      - go.sum
      - .github/workflows/**

jobs:
  test-commands:
    name: Run Specific Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: make deps

      - name: Test CAPABILITY command
        run: go test -tags=test -v ./test/server -run "TestCapabilityCommand"

      - name: Test NOOP command
        run: go test -tags=test -v ./test/server -run "TestNoopCommand"

      - name: Test CHECK command
        run: go test -tags=test -v ./test/server -run "TestCheckCommand"

      - name: Test CLOSE command
        run: go test -tags=test -v ./test/server -run "TestCloseCommand"

      - name: Test EXPUNGE command
        run: go test -tags=test -v ./test/server -run "TestExpungeCommand"

      - name: Test LOGOUT command
        run: go test -tags=test -v ./test/server -run "TestLogoutCommand"

      - name: Test APPEND command
        run: go test -tags=test -v ./test/server -run "TestAppendCommand"

      - name: Test AUTHENTICATE command
        run: go test -tags=test -v ./test/server -run "TestAuthenticate"

      - name: Test LOGIN command
        run: go test -tags=test -v ./test/server -run "TestLoginCommand"

      - name: Test STARTTLS command
        run: go test -tags=test -v ./test/server -run "TestStartTLS"

      - name: Test SELECT command
        run: go test -tags=test -v ./test/server -run "TestSelectCommand"

      - name: Test EXAMINE command
        run: go test -tags=test -v ./test/server -run "TestExamineCommand"

      - name: Test CREATE command
        run: go test -tags=test -v ./test/server -run "TestCreateCommand"

      - name: Test LIST command
        run: go test -tags=test -v ./test/server -run "TestListCommand"

      - name: Test LIST extended command
        run: go test -tags=test -v ./test/server -run "TestListCommand.*RFC3501|TestListCommand.*Wildcard|TestListCommand.*Hierarchy|TestListCommand.*Reference|TestListCommand.*Error|TestListCommand.*Special"

      - name: Test DELETE command
        run: go test -tags=test -v ./test/server -run "TestDeleteCommand"

      - name: Test RENAME command
        run: go test -tags=test -v ./test/server -run "TestRenameCommand"

      - name: Test SUBSCRIBE command
        run: go test -tags=test -v ./test/server -run "TestSubscribeCommand"

      - name: Test UNSUBSCRIBE command
        run: go test -tags=test -v ./test/server -run "TestUnsubscribeCommand"

      - name: Test LSUB command
        run: go test -tags=test -v ./test/server -run "TestLsubCommand"

      - name: Test STATUS command
        run: go test -tags=test -v ./test/server -run "TestStatusCommand"

      - name: Test SEARCH command
        run: go test -tags=test -v ./test/server -run "TestSearchCommand"

      - name: Test FETCH command
        run: go test -tags=test -v ./test/server -run "TestFetchCommand"

      - name: Test STORE command
        run: go test -tags=test -v ./test/server -run "TestStoreCommand"

      - name: Test COPY command
        run: go test -tags=test -v ./test/server -run "TestCopyCommand"

      - name: Test UID commands
        run: go test -tags=test -v ./test/server -run "TestUID"

  test-delivery:
    name: Test Delivery Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: make deps

      - name: Test Delivery Configuration
        run: go test -tags=test -v ./test/delivery -run "TestDefaultConfig|TestLoadConfig|TestConfigValidation"

      - name: Test Email Parser
        run: go test -tags=test -v ./test/delivery -run "TestParseMessage|TestValidateMessage|TestExtractEnvelopeRecipient|TestReadDataCommand"

      - name: Test Email Address Extraction
        run: go test -tags=test -v ./test/delivery -run "TestExtractLocalPart|TestExtractDomain"

      - name: Run All Delivery Tests
        run: go test -tags=test -v ./test/delivery

  test-sasl:
    name: Test SASL Authentication Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: make deps

      - name: Test SASL Server Creation
        run: go test -tags=test -v ./test/sasl -run "TestNewServer"

      - name: Test SASL Server Startup and Shutdown
        run: go test -tags=test -v ./test/sasl -run "TestServerStartShutdown|TestServerShutdownIdempotent"

      - name: Test SASL Protocol Handshake
        run: go test -tags=test -v ./test/sasl -run "TestVersionHandshake|TestCPIDCommand"

      - name: Test PLAIN Authentication
        run: go test -tags=test -v ./test/sasl -run "TestPlainAuthentication"

      - name: Test SASL Authentication Mechanisms
        run: go test -tags=test -v ./test/sasl -run "TestLoginMechanism|TestUnsupportedMechanism|TestAuthMechanismCaseInsensitive"

      - name: Test SASL Error Handling
        run: go test -tags=test -v ./test/sasl -run "TestInvalidAuthCommand|TestAuthenticationAPIError"

      - name: Test SASL Concurrent Connections
        run: go test -tags=test -v ./test/sasl -run "TestConcurrentConnections|TestMultipleCommandsInSession"

      - name: Run All SASL Tests
        run: go test -tags=test -v ./test/sasl
